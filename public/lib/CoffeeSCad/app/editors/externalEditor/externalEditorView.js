// Generated by CoffeeScript 1.6.2
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(function(require) {
  var $, ExternalEditorView, appVent, jquery_layout, jquery_ui, marionette, template, _;

  $ = require('jquery');
  _ = require('underscore');
  require('bootstrap');
  marionette = require('marionette');
  jquery_layout = require('jquery_layout');
  jquery_ui = require('jquery_ui');
  appVent = require('core/messaging/appVent');
  template = require("text!./externalEditorView.tmpl");
  ExternalEditorView = (function(_super) {
    __extends(ExternalEditorView, _super);

    ExternalEditorView.prototype.template = template;

    ExternalEditorView.prototype.className = "externalEditor";

    ExternalEditorView.prototype.ui = {
      toolbox: "#externalToolbox"
    };

    ExternalEditorView.prototype.events = {
      "resize:start": "onResizeStart",
      "resize:stop": "onResizeStop",
      "resize": "onResizeStop"
    };

    function ExternalEditorView(options) {
      this.onClose = __bind(this.onClose, this);
      this.onResizeStop = __bind(this.onResizeStop, this);
      this.onResizeStart = __bind(this.onResizeStart, this);
      this.onDomRefresh = __bind(this.onDomRefresh, this);
      this.onRender = __bind(this.onRender, this);
      this.clearWorkspace = __bind(this.clearWorkspace, this);
      this.codeUpdateFunction = __bind(this.codeUpdateFunction, this);
      this._tearDownEventHandlers = __bind(this._tearDownEventHandlers, this);
      this._setupEventHandlers = __bind(this._setupEventHandlers, this);      ExternalEditorView.__super__.constructor.call(this, options);
      this.settings = options.settings;
      this._setupEventHandlers();
      this.project = this.model;
      $('#externalEditor').width('600px');
    }

    ExternalEditorView.prototype._setupEventHandlers = function() {
      return console.log("_setupEventHandlers()");
    };

    ExternalEditorView.prototype._tearDownEventHandlers = function() {
      return console.log("_tearDownEventHandlers()");
    };

    ExternalEditorView.prototype.codeUpdateFunction = function() {};

    ExternalEditorView.prototype.clearWorkspace = function() {};

    ExternalEditorView.prototype.onRender = function() {
      return console.log("onRender()");
    };

    ExternalEditorView.prototype.onDomRefresh = function() {
      return console.log("onDomRefresh()");
    };

    ExternalEditorView.prototype.onResizeStart = function() {
      return console.log("external editor view resize start");
    };

    ExternalEditorView.prototype.onResizeStop = function() {
      var w;

      console.log("external editor view resize stop");
      w = $('#externalEditor').width() + 'px';
      console.log("setting width to " + w);
      return $('#externalEditorIframe').width(w);
    };

    ExternalEditorView.prototype.onClose = function() {
      console.log("onClose()");
      this._tearDownEventHandlers();
      return this.project = null;
    };

    return ExternalEditorView;

  })(Backbone.Marionette.ItemView);
  return ExternalEditorView;
});
