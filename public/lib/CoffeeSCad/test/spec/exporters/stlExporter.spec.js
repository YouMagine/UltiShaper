// Generated by CoffeeScript 1.6.3
define(function(require) {
  var Project, StlExporter;
  StlExporter = require("core/projects/kernel/geometry/exporters/stlExporter");
  Project = require("core/projects/project");
  return describe("StlExporter ", function() {
    var project, stlExporter;
    project = null;
    stlExporter = null;
    beforeEach(function() {
      project = new Project({
        name: "test_project"
      });
      return stlExporter = new THREE.stlExporter();
    });
    return it('can export a project to stl (ascii)', function() {
      var expStl, geometry, obsStl;
      project.addFile({
        name: "test_project.coffee",
        content: "myCube = new Cube({size:[20,20,20]})\nassembly.add(myCube)"
      });
      project.compile();
      geometry = project.rootAssembly.children[0].geometry;
      obsStl = stlExporter.parse(geometry);
      expStl = "solid geometry.name \nfacet normal 1 0 0\n  outer loop\n    vertex 10.00000 10.00000 10.00000\n    vertex 10.00000 -10.00000 10.00000\n    vertex 10.00000 -10.00000 -10.00000\n  endloop\nendfacet\nfacet normal 1 0 0\n  outer loop\n    vertex 10.00000 -10.00000 -10.00000\n    vertex 10.00000 10.00000 -10.00000\n    vertex 10.00000 10.00000 10.00000\n  endloop\nendfacet\nfacet normal -1 0 0\n  outer loop\n    vertex -10.00000 10.00000 -10.00000\n    vertex -10.00000 -10.00000 -10.00000\n    vertex -10.00000 -10.00000 10.00000\n  endloop\nendfacet\nfacet normal -1 0 0\n  outer loop\n    vertex -10.00000 -10.00000 10.00000\n    vertex -10.00000 10.00000 10.00000\n    vertex -10.00000 10.00000 -10.00000\n  endloop\nendfacet\nfacet normal 0 1 0\n  outer loop\n    vertex -10.00000 10.00000 -10.00000\n    vertex -10.00000 10.00000 10.00000\n    vertex 10.00000 10.00000 10.00000\n  endloop\nendfacet\nfacet normal 0 1 0\n  outer loop\n    vertex 10.00000 10.00000 10.00000\n    vertex 10.00000 10.00000 -10.00000\n    vertex -10.00000 10.00000 -10.00000\n  endloop\nendfacet\nfacet normal 0 -1 0\n  outer loop\n    vertex -10.00000 -10.00000 10.00000\n    vertex -10.00000 -10.00000 -10.00000\n    vertex 10.00000 -10.00000 -10.00000\n  endloop\nendfacet\nfacet normal 0 -1 0\n  outer loop\n    vertex 10.00000 -10.00000 -10.00000\n    vertex 10.00000 -10.00000 10.00000\n    vertex -10.00000 -10.00000 10.00000\n  endloop\nendfacet\nfacet normal 0 0 1\n  outer loop\n    vertex -10.00000 10.00000 10.00000\n    vertex -10.00000 -10.00000 10.00000\n    vertex 10.00000 -10.00000 10.00000\n  endloop\nendfacet\nfacet normal 0 0 1\n  outer loop\n    vertex 10.00000 -10.00000 10.00000\n    vertex 10.00000 10.00000 10.00000\n    vertex -10.00000 10.00000 10.00000\n  endloop\nendfacet\nfacet normal 0 0 -1\n  outer loop\n    vertex 10.00000 10.00000 -10.00000\n    vertex 10.00000 -10.00000 -10.00000\n    vertex -10.00000 -10.00000 -10.00000\n  endloop\nendfacet\nfacet normal 0 0 -1\n  outer loop\n    vertex -10.00000 -10.00000 -10.00000\n    vertex -10.00000 10.00000 -10.00000\n    vertex 10.00000 10.00000 -10.00000\n  endloop\nendfacet\n";
      console.log(obsStl);
      return expect(obsStl).toEqual(expStl);
    });
    /*
    it 'can export a project to stl (blobUrl)',->
      project.addFile
        name:"test_project.coffee"
        content:"""
        class TestPart extends Part
          constructor:(options) ->
            super options
            @union(new Cylinder(h:300, r:20,$fn:3))
        
        testPart = new TestPart()
        assembly.add(testPart)
        """
      project.compile()
      blobUrl = stlExporter.export(project.rootAssembly)
      expect(blobUrl).not.toBe(null)
    
     
    it 'triggers an stlExport:error event when export fails',-> 
      project.addFile
        name:"test_project.coffee"
      errorCallback = jasmine.createSpy('-error event callback-')
      stlExporter.vent.on("stlExport:error", errorCallback)
      
      stlExporter.export(project.rootAssembly)
      errorArgs = errorCallback.mostRecentCall.args
      expect(errorArgs).toBeDefined()
      expect(errorArgs[0].message).toBe("Failed to merge csgObject children with error: TypeError: Object #<Object> has no method 'clone'")
      
    it 'returns null when export fails',->   
      project.addFile
          name:"testFileName"
      blobUrl = stlExporter.export(project.rootAssembly)
      expect(blobUrl).toBe(null)
    */

  });
});
